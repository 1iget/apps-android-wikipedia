// add task for executing both jvm junit and android instrumentation tests (per variant)
def testAllTask(String testAllName, String jvmJUnitName, String androidInstrumentationName) {
    // run jvm junit tests and android instrumentation tests
    task (testAllName, dependsOn: [jvmJUnitName, androidInstrumentationName]) {
        // jvm junit tests execute quickest and should be attempted prior to android instrumentation
        // tests
        shouldRunAfter jvmJUnitName
    }
}

def grantPermissionTask(variant, String taskName) {
    task (taskName, type: Exec, dependsOn: variant.install) {
        String adb = android.getAdbExe().toString()
        String pkg = variant.applicationId
        String readPermission = 'android.permission.READ_EXTERNAL_STORAGE'
        String writePermission = 'android.permission.WRITE_EXTERNAL_STORAGE'
        String cmd = "pm grant ${pkg} ${readPermission} && pm grant ${pkg} ${writePermission}"
        commandLine adb, 'shell', cmd
    }
    variant.testVariant.connectedInstrumentTest.dependsOn += taskName
}

android.applicationVariants.all { variant ->
    if (variant.testVariant) {
        grantPermissionTask variant, "grantPermission${variant.name.capitalize()}"
    }
}

// add testAll tasks for each build variant of the current build type
android.productFlavors.all { flavor ->
    String variantName = flavor.name.capitalize() + android.testBuildType.capitalize()
    String testAllName = "testAll${variantName}"
    String jvmJUnitName = "test${variantName}UnitTest"
    String androidInstrumentationName = "connected${variantName}AndroidTest"

    testAllTask testAllName, jvmJUnitName, androidInstrumentationName
}