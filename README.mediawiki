== We welcome volunteer contributions! ==

Follow the steps below to get started, and feel free to ping any member of the WMF Android dev team (bearND, dbrant, mdholloway, niedzielski) on irc://irc.freenode.net/wikimedia-mobile for assistance.

== Set up a development environment ==

=== Create a developer account ===

See https://www.mediawiki.org/wiki/Developer_access.

=== Add your SSH key to Gerrit ===

See https://www.mediawiki.org/wiki/Gerrit/Tutorial#Set_Up_SSH_Keys_in_Gerrit.

=== Install JDK 7+ ===

JDK 7 or higher is needed to build Android apps. To find your current version:

 javac -version

If you need to update, downloads are available [http://www.oracle.com/technetwork/java/javase/downloads/index.html here].

=== Download and install Android Studio ===

https://developer.android.com/sdk/index.html

Run the setup wizard. Standard installation is fine. Installation will take a while.

=== Download the project source ===

 git clone ssh://<USERNAME>@gerrit.wikimedia.org:29418/apps/android/wikipedia

Note that this requires [https://www.mediawiki.org/wiki/Developer_access developer access].

If you prefer, you may anonymously download a copy [https://git.wikimedia.org/git/apps/android/wikipedia.git here].

=== Import into Android Studio ===

Open Android Studio > Import project > select build.gradle from the downloaded repository.

=== Plugins ===

==== Checkstyle-IDEA ====

IntelliJ's [https://plugins.jetbrains.com/plugin/1065 Checkstyle-IDEA] plugin is useful in ensuring that your code will meet the project style guidelines.

The most recent version of this plugin has caused problems; download a working version [https://plugins.jetbrains.com/plugin/download?pr=&updateId=18978 here].

To install: Android Studio > Configure > Plugins > Install plugin from disk > select downloaded file.

Restart to complete the installation, then add the checkstyle configuration file:

Android Studio > Configure > Preferences > Other Settings > click on the '+' in the upper pane and select checkstyle.xml from the repository.

Make sure you activate the new configuration file by checking the check box next to it, so our checkstyle rules are enabled and deviations show up as errors in the code editor.

== Install and configure git-review ==

Install git-review:

 sudo pip install git-review

Then create the file ~/.config/git-review/git-review.conf containing the following lines:

 [gerrit]
 defaultremote = origin

== Make changes and submit for review via Gerrit ==

Make changes and squash into a single commit, then:

 git review -R

See [https://www.mediawiki.org/wiki/Gerrit/Tutorial#Prepare_to_push_your_change_set_to_Gerrit here] for details.

== Scripts (not needed to build the app) ==

=== Update bundled CSS files ===

The various CSS files for this project are generated by the *.less files found in the [https://github.com/wikimedia/mediawiki-extensions-MobileFrontend MobileFrontend] and [https://github.com/wikimedia/mediawiki-extensions-MobileApp MobileApp] MediaWiki extensions.

You'll need a MediaWiki installation, [https://www.mediawiki.org/wiki/MediaWiki-Vagrant MediaWiki-Vagrant] recommended, to generate them.

In the ./vagrant directory:

 vagrant enable-role mobileapp
 vagrant provision

Change the url in scripts/make-css-assets.bash to http://127.0.0.1:8080/w instead of the bits url, then run the script and test.

Note: your system may be unable to run the Android emulator and a Vagrant / VirtualBox instance simultaneously.

=== Update bundled JavaScript ===

Portions of JavaScript code run inside the WebView component that displays articles.

This code is prepackaged using [http://gruntjs.com/getting-started Grunt], which must be re-run every time the master .js files are edited before building.

Preparing:

First, install the Grunt CLI tool:

 npm install -g grunt-cli

Install dependencies for packaging:

 cd www
 npm install

Building:
 cd www
 grunt

This will produce output files under wikipedia/assets which will be included in the .apk.

=== Update icons from SVG ===

Many of our icons are maintained as SVG originals, rasterized to PNG at the various output resolutions via a script. This rasterization is not part of the main build process, so needs to be re-run when adding new icons.

==== Setup ====

Install sh python module:

 pip install sh

Ensure you have librsvg and the 'rsvg-convert' command:

* On Ubuntu: <code>sudo apt-get install librsvg2-bin</code>
* On Mac OS X using Homebrew: <code>brew install librsvg</code>

You also need to have ImageMagick (for flipping of icons):

* On Ubuntu: <code>sudo apt-get install imagemagick</code>
* On Mac OS X using Homebrew: <code>brew install imagemagick</code>

Lastly, you'll need the pngcrush utility, which optimizes PNG files:

* On Ubuntu: <code>sudo apt-get install pngcrush</code>
* On Mac OS X using Homebrew: <code>brew install pngcrush</code>

==== Run ====

 python scripts/convert-icons.py

Original files from icon-svgs/*/*.svg are rendered and copied into the res/ subdirectories. Note that they are not automatically added to git!

=== Update generated static data files ===

==== Setup ====

 sudo pip install unicodecsv
 sudo pip install jinja2

==== Run ====

 cd scripts
 python make-templates.py
 mv *.java ../wikipedia/src/main/java/org/wikipedia/staticdata/

== Conventions ==

* Java code must run cleanly against Checkstyle
* JavaScript must run cleanly against JSHint
* We're working to be lint free! Currently Android Linting has many offenders but new contributions should help us progress towards zero.
* Python changes should run cleanly against flake8.
* All Android and JVM unit tests should pass.
* Git commit messages should conform to the [https://www.mediawiki.org/wiki/Gerrit/Commit_message_guidelines MediaWiki commit message guidelines]
* Documentation should conform to the [https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style Wikipedia manual of style]
* When making changes to any strings.xml, corresponding explanatory text should be added to values-qq/strings.xml
* Third-party libraries must meet [https://www.mediawiki.org/wiki/Wikimedia_Apps/Team/Android/Third_Party_Libraries acceptance criteria]

== Tips ==

=== WebView debugging in Chrome ===

Wikipedia for Android makes extensive use of WebViews. To debug WebView activity, navigate Google Chrome to chrome://inspect/#devices, then click on the topmost “inspect” link under “WebView in org.wikipedia.” From there you can debug the WebView like any other web site in Chrome.

=== Useful Gradle commands ===

If you prefer command line use the wrapper script in the root of the repo:
 ./gradlew

To run a clean debug build:
 ./gradlew -q clean assembleAlphaDebug

You can skip the clean part usually, which makes it much faster (from 1m:05s to 7s on my box):
 ./gradlew -q assembleAlphaDebug

To install build on device/emulator:
 ./gradlew -q installAlphaDebug

To see ProGuard output:
 ./gradlew clean --info proguardBetaRelease

To run checkstyle:
 ./gradlew checkstyle

To run Lint:
 ./gradlew lintAlphaDebug

To run tests:
 ./gradlew wikipedia:connectedAndroidTestAlphaDebug

To refresh dependencies (usually not needed):
 ./gradlew --refresh-dependencies

To list dependencies:</pre>
 ./gradlew wikipedia:dependencies --configuration compile

== Help make it better! ==

Testing:
* [https://android-builds.wmflabs.org Alpha release]
* [https://play.google.com/store/apps/details?id=org.wikipedia.beta Beta release]
* [https://play.google.com/store/apps/details?id=org.wikipedia Production release]

See pending/recent code reviews:
* [https://gerrit.wikimedia.org/r/#/projects/apps/android/wikipedia,dashboards/default Wikipedia Android app]
* [https://gerrit.wikimedia.org/r/#/projects/apps/android/java-mwapi,dashboards/default Java MediaWiki-API]
* [https://gerrit.wikimedia.org/r/#/projects/mediawiki/extensions/MobileApp,dashboards/default MediaWiki MobileApp extension]
